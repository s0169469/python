def find_min(x):
    a=x[0]
    for i in range(len(x)):
        if x[i]<a:
            a=x[i]
    return a
print("Введите количество элементов массива ")
n=int(input())
print("Введите элменты массива")
k=8
arr=[0]*k
for i in range(n):
    arr[i] = int(input())
print("Введите индекс проверяемого элемента")
i=int(input())
if(arr[i]==find_min(arr)):
    print("Элемент по указанному индексу является глобальным минимумом")
else:
    print("Элемент по указанному индексу не является глобальным минимумом")
    
def find_ind_min(x):
    a=0
    for i in range(len(x)):
        if x[i]<x[a]:
            a=i
    return a
def find_ind_max(x):
    a=0
    for i in range(len(x)):
        if x[i]>x[a]:
            a=i
    return a
def swipe_min_max(a):
    i1=find_ind_min(a)
    i2=find_ind_max(a)
    t=a[i1]
    a[i1]=a[i2]
    a[i2]=t
    for i in range(len(a)):
        print(a[i], " ")
print("Введите количество элементов массива ")
n=int(input())
print("Введите элменты массива")
arr=[0]*n
for i in range(n):
    arr[i] = int(input())
swipe_min_max(arr)

# дан цел массив и интервал (a,b).
# проверить наличие максимального элемента в этом интервале
def func_17_29():
    arr = enter_arr()
    a = int(input('Enter a: '))
    b = int(input('Enter b: '))
    return a < max(arr) < b


# дан целоч. массив. найти среднее арифметическое
# модулей его элементов
def func_18_41():
    arr = enter_arr()
    s = 0
    for i in range(len(arr)):
        s += abs(arr[i])
    return float(s/len(arr))


#для введенного списка построить новый с элементами,
# большими, чем среднее арифм списка, но меньшими, чем
# его максимальное значение
def func_19_53():
    s = []
    num = int(input('Enter the number of list: '))
    for i in range(num):
        s1 = float(input('Enter element: '))
        s.append(s1)
    avg = 0
    for i in range(num):
        avg += s[i]
    avg = avg / num
    for i in range(num):
        s[i] = random.uniform(avg, max(s))
    return s
